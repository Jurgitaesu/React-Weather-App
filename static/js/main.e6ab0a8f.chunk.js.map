{"version":3,"sources":["components/Titles.js","components/SearchBar.js","components/CurrentWeather.js","components/Forecast.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Titles","className","SearchBar","props","onSubmit","getWeather","type","name","placeholder","CurrentWeather","weatherIcon","main","icon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","error","city","country","date","temperature","Math","round","feelsLike","description","humidity","isVisible","value","styles","buildStyles","strokeLinecap","textSize","pathTransitionDuration","textColor","trailColor","backgroundColor","wind","faWind","clouds","sunrise","sunset","Forecast","date1","icon1","src","alt","temperature1","description1","date2","icon2","temperature2","description2","date3","icon3","temperature3","description3","date4","icon4","temperature4","description4","Footer","href","App","state","forecast","day1","day2","day3","day4","day5","e","preventDefault","target","elements","APIkey","process","weather","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getMonth","getDate","getDay","sys","toTimeString","slice","setState","temp","feels_like","speed","list","dt_txt","catch","console","log","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e6ab0a8f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Titles() {\r\n    return (\r\n        <div className=\"text-center title__margin title__color\">\r\n            <h1 className=\"title__size\">Weather App</h1>\r\n            <h3>Find out weather forecast in any city</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Titles;\r\n","import React from 'react'\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <form onSubmit={props.getWeather}>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-3 mx-auto mt-4\">\r\n                    <input type=\"text\" className=\"form-control radius\" name=\"city\" placeholder=\"City...\" />\r\n                </div></div>\r\n            <div className=\"text-center\">\r\n                <button type=\"submit\" className=\"btn btn__custom mt-2\">Get weather</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faCloud,\r\n    faWind,\r\n    faBolt,\r\n    faCloudRain,\r\n    faCloudShowersHeavy,\r\n    faSnowflake,\r\n    faSun,\r\n    faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction CurrentWeather(props) {\r\n\r\n    let weatherIcon = null;\r\n    if (props.main === 'Thunderstorm') {\r\n        weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n    } else if (props.main === 'Drizzle') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n    } else if (props.main === 'Rain') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n    } else if (props.main === 'Snow') {\r\n        weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n    } else if (props.main === 'Clear') {\r\n        weatherIcon = <FontAwesomeIcon className='text-warning' icon={faSun} />;\r\n    } else if (props.main === 'Clouds') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n    } else {\r\n        weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h5 className=\"text-danger pt-3 text-center\">{props.error}</h5>\r\n            {props.city &&\r\n                <div className=\"row my-5 font__color\">\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 py-4 box__color text-center\">\r\n                        {props.city && <h2 className=\"\">{props.city}, {props.country}</h2>}\r\n                        {props.date && <h4>{props.date}</h4>}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                {props.icon && <div className=\"text-center text-white text__size\">{weatherIcon}</div>}</div>\r\n                            <div className=\"col-6 my-auto\">\r\n                                {props.temperature && <h1 className=\"\">{Math.round(props.temperature)}°C</h1>}\r\n                                {props.feelsLike && <h5>Feels like: {Math.round(props.feelsLike)}°C</h5>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {props.description && <h2 className=\"weather__description\"> {props.description}</h2>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 py-4 font-italic\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 my-auto\">\r\n                                {props.humidity && <div className=\"img__size h5 mx-auto\">\r\n                                    <VisibilitySensor>\r\n                                        {({ isVisible }) => {\r\n                                            const humidity = isVisible ? props.humidity : 0;\r\n                                            return (\r\n                                                <CircularProgressbarWithChildren\r\n                                                    value={humidity}\r\n                                                    styles={buildStyles({\r\n                                                        strokeLinecap: 'round',\r\n                                                        textSize: '16px',\r\n                                                        pathTransitionDuration: 0.5,\r\n                                                        textColor: '#164C6E',\r\n                                                        trailColor: '#d6d6d6',\r\n                                                        backgroundColor: '#164C6E',\r\n\r\n                                                    })}\r\n\r\n                                                >\r\n                                                    <div className=\"my-auto text-center\">\r\n                                                        <p>Humidity:</p>\r\n                                                        <p>{humidity} %</p>\r\n                                                    </div>\r\n                                                </CircularProgressbarWithChildren>\r\n\r\n                                            );\r\n                                        }}\r\n                                    </VisibilitySensor>\r\n                                </div>}\r\n                            </div>\r\n\r\n                            <div className=\"col-6 text-left py-2 pl-4\">\r\n                                {props.wind && <p className=\"h5\"> <FontAwesomeIcon icon={faWind} /> {props.wind} mph</p>}\r\n                                {props.clouds && <p className=\"h5\"><FontAwesomeIcon icon={faCloud} /> {props.clouds} %</p>}\r\n                                {props.sunrise && <p className=\"h5\"> Sunrise: {props.sunrise}</p>}\r\n                                {props.sunset && <p className=\"h5\"> Sunset: {props.sunset}</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react'\r\n\r\nfunction Forecast(props) {\r\n    return (\r\n\r\n        <div className=\"text-center font__color\">\r\n            {\r\n                props.date1 &&\r\n                <div className=\"h5\">Four days forecast:</div> &&\r\n                <div className=\"row justify-content-center my-5\">\r\n                    <div className=\"col-12 col-sm-6 col-md-4 col-lg-2 box__color m-3 py-2\">\r\n                        {props.date1 && <p className=\"h4\">{props.date1}</p>}\r\n                        {props.icon1 && <img className=\"img-fluid\" src={`http://openweathermap.org/img/w/${props.icon1}.png`} alt=\"weather icon\" />}\r\n                        {props.temperature1 && <p className=\"h5\">{Math.round(props.temperature1)}°C</p>}\r\n                        {props.description1 && <p className=\"h5\">{props.description1}</p>}\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 col-md-4 col-lg-2 box__color m-3 py-2\">\r\n                        {props.date2 && <p className=\"h4\">{props.date2}</p>}\r\n                        {props.icon2 && <img className=\"img-fluid\" src={`http://openweathermap.org/img/w/${props.icon2}.png`} alt=\"weather icon\" />}\r\n                        {props.temperature2 && <p className=\"h5\">{Math.round(props.temperature2)}°C</p>}\r\n                        {props.description2 && <p className=\"h5\">{props.description2}</p>}\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 col-md-4 col-lg-2 box__color m-3 py-2\">\r\n                        {props.date3 && <p className=\"h4\">{props.date3}</p>}\r\n                        {props.icon3 && <img className=\"img-fluid\" src={`http://openweathermap.org/img/w/${props.icon3}.png`} alt=\"weather icon\" />}\r\n                        {props.temperature3 && <p className=\"h5\">{Math.round(props.temperature3)}°C</p>}\r\n                        {props.description3 && <p className=\"h5\">{props.description3}</p>}\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 col-md-4 col-lg-2 box__color m-3 py-2\">\r\n                        {props.date4 && <p className=\"h4\">{props.date4}</p>}\r\n                        {props.icon4 && <img className=\"img-fluid\" src={`http://openweathermap.org/img/w/${props.icon4}.png`} alt=\"weather icon\" />}\r\n                        {props.temperature4 && <p className=\"h5\">{Math.round(props.temperature4)}°C</p>}\r\n                        {props.description4 && <p className=\"h5\">{props.description4}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Forecast;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <a href='https://www.freepik.com/vectors/background' className=\"fixed-bottom text-decoration-none\">Background vector created by freepik - www.freepik.com</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Titles from './components/Titles';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\nimport Footer from './components/Footer';\n\n\nclass App extends React.Component {\n  state = {\n    city: '',\n    country: '',\n    date: '',\n    main: '',\n    icon: '',\n    description: '',\n    temperature: '',\n    feelsLike: '',\n    sunrise: '',\n    sunset: '',\n    clouds: '',\n    humidity: '',\n    wind: '',\n    forecast: {\n      day1: {\n        date: '',\n        icon: '',\n        temperature: '',\n        description: ''\n      },\n      day2: {\n        date: '',\n        icon: '',\n        temperature: '',\n        description: ''\n      },\n      day3: {\n        date: '',\n        icon: '',\n        temperature: '',\n        description: ''\n      },\n      day4: {\n        date: '',\n        icon: '',\n        temperature: '',\n        description: ''\n      },\n      day5: {\n        date: '',\n        icon: '',\n        temperature: '',\n        description: ''\n      }\n    },\n    error: '',\n  };\n\n  getWeather = e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const APIkey = process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${APIkey}&units=metric`;\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'Nocvember',\n          'December',\n        ];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${months[currentDate.getMonth()]} ${currentDate.getDate()}, ${days[currentDate.getDay()]}`;\n        const sunset = new Date(data1.sys.sunset * 1000).toTimeString().slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000).toTimeString().slice(0, 5);\n\n\n        this.setState({\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          main: data1.weather[0].main,\n          icon: data1.weather[0].icon,\n          description: data1.weather[0].description,\n          temperature: data1.main.temp,\n          feelsLike: data1.main.feels_like,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: {\n            day1: {\n              date: data2.list[8].dt_txt.slice(0, 16),\n              icon: data2.list[8].weather[0].icon,\n              temperature: data2.list[8].main.temp,\n              description: data2.list[8].weather[0].description\n            },\n            day2: {\n              date: data2.list[16].dt_txt.slice(0, 16),\n              icon: data2.list[16].weather[0].icon,\n              temperature: data2.list[16].main.temp,\n              description: data2.list[16].weather[0].description\n            },\n            day3: {\n              date: data2.list[24].dt_txt.slice(0, 16),\n              icon: data2.list[24].weather[0].icon,\n              temperature: data2.list[24].main.temp,\n              description: data2.list[24].weather[0].description\n            },\n            day4: {\n              date: data2.list[32].dt_txt.slice(0, 16),\n              icon: data2.list[32].weather[0].icon,\n              temperature: data2.list[32].main.temp,\n              description: data2.list[32].weather[0].description\n            },\n\n          },\n\n          error: '',\n\n        });\n\n      })\n\n      .catch(error => {\n        console.log(error);\n\n        this.setState({\n          city: '',\n          country: '',\n          date: '',\n          main: '',\n          icon: '',\n          description: '',\n          temperature: '',\n          feelsLike: '',\n          sunrise: '',\n          sunset: '',\n          clouds: '',\n          humidity: '',\n          wind: '',\n          forecast: {\n            day1: {\n              date: '',\n              icon: '',\n              temperature: '',\n              description: ''\n            },\n            day2: {\n              date: '',\n              icon: '',\n              temperature: '',\n              description: ''\n            },\n            day3: {\n              date: '',\n              icon: '',\n              temperature: '',\n              description: ''\n            },\n            day4: {\n              date: '',\n              icon: '',\n              temperature: '',\n              description: ''\n            },\n\n\n          },\n          error: 'Please insert a valid city',\n\n        });\n\n      });\n\n  };\n\n  render() {\n\n    return (\n\n      <div className=\"container position-relative\">\n        <Titles />\n        <SearchBar getWeather={this.getWeather} />\n\n        <CurrentWeather\n          temperature={this.state.temperature}\n          humidity={this.state.humidity}\n          city={this.state.city}\n          country={this.state.country}\n          main={this.state.main}\n          icon={this.state.icon}\n          description={this.state.description}\n          feelsLike={this.state.feelsLike}\n          clouds={this.state.clouds}\n          date={this.state.date}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          wind={this.state.wind}\n          error={this.state.error}\n        />\n        <Forecast\n          date1={this.state.forecast.day1.date}\n          icon1={this.state.forecast.day1.icon}\n          temperature1={this.state.forecast.day1.temperature}\n          description1={this.state.forecast.day1.description}\n          date2={this.state.forecast.day2.date}\n          icon2={this.state.forecast.day2.icon}\n          temperature2={this.state.forecast.day2.temperature}\n          description2={this.state.forecast.day2.description}\n          date3={this.state.forecast.day3.date}\n          icon3={this.state.forecast.day3.icon}\n          temperature3={this.state.forecast.day3.temperature}\n          description3={this.state.forecast.day3.description}\n          date4={this.state.forecast.day4.date}\n          icon4={this.state.forecast.day4.icon}\n          temperature4={this.state.forecast.day4.temperature}\n          description4={this.state.forecast.day4.description}\n        />\n\n        <Footer />\n      </div >\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}